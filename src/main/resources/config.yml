# You are welcome to the ActionManager! v1.0

# Section where you can contain number, string and arrays.
container:
  allowed-worlds:
    - skypvp
  b: 5

# Here you can write condition with link to the condition, same with lambda in java.
# There is three parts, 1 condition 2 expression 3 condition, for example: 3 != 3,
#   result will be false and expression with this condition dont run.
# (!) Do space after every part.
# =~ contains with ignore case.
# = equals
# != not equals
# instanceof like java
# permission check if player has some permission, use like "{getPlayer} or {getEntity} permission your.permission"
# > large than, < small than : you can use <= and >=
# $ here will take value from container, for example 3 != $b
# %placeholder% Use placeholder conditions only in events with getEntity instanceof Player.
# [] - get class with path.
# {} take method or field from event class.
# if you want to run this command for target like in command, set target before run some expression.
condition:
  # Condition name, for $condition_name
  allowed-worlds:
    # Expression, you can write unlimited expressions and use this in action.
    - "{getEntity()#getWorld()#getName()} =~ $allowed-worlds"
  # Condition name, for $condition_name
  allowed-worlds-for-target:
    # Expression, you can write unlimited expressions and use this in action.
    - "target{getWorld()#getName()} =~ $allowed-worlds"
  permission:
    # Expression, you can write unlimited expressions and use this in action.
    - "target permission msg"
  is-player:
    - "{getEntity()} instanceof [org.bukkit.entity.Player]"

# Here we can create our sentences and actions for this sentences.
# $killer - only for events where there is damager#getName
# $player - only for events where there is getEntity()#getName
# {iterate} before command will run iteration for all players in the server, you also can paste some expressions inside.
#  ($allowed-worlds, $allowed-worlds) will check two condition.
#  use $target for select need player.
# activators:
#  ignoreCancelled - if event was cancelled should we ignore them.
#  priority - EventPriority, lowest - first, low, normal, high, highest, monitor - last.
action:
  # Reward killer when player is died
  - activator:
      - playerdeathevent(priority=HIGHEST, ignoreCancelled=true)
    condition:
      - "$is-player"
      - "$allowed-worlds"
    command:
      - "give $player 322:0 1"
      - "{iterate($allowed-worlds, $allowed-worlds)} tellraw $target $player is died"

  # Anti void
  - activator:
      - playermoveevent
    condition:
      - "{to#y} < 0"
    command:
      - "tp $player %world% %x% %y% %z%"
